{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentSlide","handlePrevClick","props","step","images","frameSize","infinite","newSlide","setState","length","handleNextClick","this","itemWidth","animationDuration","trackStyles","transform","transition","className","style","width","map","imageUrl","index","src","alt","type","onClick","Component","App","handleItemWidthChange","e","target","value","handleFrameSizeChange","handleStepChange","handleAnimationDurationChange","handleInfiniteChange","checked","action","htmlFor","id","defaultValue","min","max","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f67296da.chunk.js","sourcesContent":["import { Component } from 'react';\n\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  currentSlide: number,\n};\n\nexport class Carousel extends Component<Props, State> {\n  state: Readonly<State> = {\n    currentSlide: 0,\n  };\n\n  handlePrevClick = () => {\n    const { currentSlide } = this.state;\n    const {\n      step,\n      images,\n      frameSize,\n      infinite,\n    } = this.props;\n    const newSlide = currentSlide - step;\n\n    if (newSlide < 0) {\n      if (infinite) {\n        this.setState({ currentSlide: images.length - frameSize });\n      }\n    } else {\n      this.setState({ currentSlide: newSlide });\n    }\n  };\n\n  handleNextClick = () => {\n    const { currentSlide } = this.state;\n    const {\n      step,\n      images,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    const newSlide = currentSlide + step;\n\n    if (newSlide > images.length - frameSize) {\n      if (infinite) {\n        this.setState({ currentSlide: 0 });\n      }\n    } else {\n      this.setState({ currentSlide: newSlide });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.props;\n    const { currentSlide } = this.state;\n\n    const trackStyles = {\n      transform: `translateX(-${currentSlide * itemWidth}px)`,\n      transition: `transform ${animationDuration}ms ease`,\n    };\n\n    return (\n      <div className=\"Carousel\" style={{ width: `${itemWidth * frameSize}px` }}>\n        <ul className=\"Carousel__list\" style={trackStyles}>\n          {images.map((imageUrl, index) => (\n            <li key={imageUrl} className=\"Carousel__item\">\n              <img\n                src={imageUrl}\n                alt={`item-${index}`}\n                style={{ width: `${itemWidth}px` }}\n              />\n            </li>\n          ))}\n        </ul>\n        <button type=\"button\" onClick={this.handlePrevClick}>\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.handleNextClick}\n          data-cy=\"next\"\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Carousel } from './components/Carousel';\n\nimport './App.scss';\n\ntype State = {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleItemWidthChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const itemWidth = +e.target.value;\n\n    this.setState({ itemWidth });\n  };\n\n  handleFrameSizeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const frameSize = +e.target.value;\n\n    this.setState({ frameSize });\n  };\n\n  handleStepChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const step = +e.target.value;\n\n    this.setState({ step });\n  };\n\n  handleAnimationDurationChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const animationDuration = +e.target.value;\n\n    this.setState({ animationDuration });\n  };\n\n  handleInfiniteChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const infinite = e.target.checked;\n\n    this.setState({ infinite });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <form action=\"#\" className=\"App__parameters\">\n          <label htmlFor=\"itemId\">\n            Item width:\n            <input\n              id=\"itemId\"\n              type=\"number\"\n              defaultValue={itemWidth}\n              min={130}\n              max={260}\n              step={10}\n              onChange={this.handleItemWidthChange}\n            />\n          </label>\n          <label htmlFor=\"frameId\">\n            Frame size:\n            <input\n              id=\"frameId\"\n              type=\"number\"\n              defaultValue={frameSize}\n              min={1}\n              max={images.length}\n              step={1}\n              onChange={this.handleFrameSizeChange}\n            />\n          </label>\n          <label htmlFor=\"stepId\">\n            Step:\n            <input\n              id=\"stepId\"\n              type=\"number\"\n              defaultValue={step}\n              min={1}\n              max={images.length}\n              step={1}\n              onChange={this.handleStepChange}\n            />\n          </label>\n          <label htmlFor=\"animationId\">\n            Animation duration:\n            <input\n              id=\"animationId\"\n              type=\"number\"\n              defaultValue={animationDuration}\n              min={500}\n              max={5000}\n              step={100}\n              onChange={this.handleAnimationDurationChange}\n            />\n          </label>\n          <label htmlFor=\"infiniteId\">\n            Infinite:\n            <input\n              id=\"infiniteId\"\n              type=\"checkbox\"\n              checked={infinite}\n              onChange={this.handleInfiniteChange}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}